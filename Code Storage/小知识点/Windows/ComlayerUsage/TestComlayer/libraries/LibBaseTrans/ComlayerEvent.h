#ifndef __EVENT_H__
#define __EVENT_H__

#pragma pack(push, 1)

// Teacher Event
#define EV_TEACHER_START					0x00000000

#define EV_SUBMIT_REQUEST					(EV_TEACHER_START + 1)
#define EV_SUBMIT_CANCEL					(EV_TEACHER_START + 2)
#define EV_SUBMIT_COMPLETE					(EV_TEACHER_START + 3)	

#define EV_THUMBNAIL_ARRIVED				(EV_TEACHER_START + 4)

#define EV_APPLYCHANNEL_SUCCESS				(EV_TEACHER_START + 5)
#define EV_CONNECT_CANCEL					(EV_TEACHER_START + 6)

#define EV_NAME_CHANGED_BY_STUDENT			(EV_TEACHER_START + 7)

#define EV_TEACHER_EXIT_FINISHED			(EV_TEACHER_START + 8)
#define EV_TEACHER_EXIT_TIMEOUT				(EV_TEACHER_START + 9)

#define EV_FILECOLLECT_STATE_CHANGED		(EV_TEACHER_START + 10)
#define EV_FILECOLLECT_FINISHED				(EV_TEACHER_START + 11)
#define EV_FILECOLLECT_CLIENTERROR			(EV_TEACHER_START + 12)

#define EV_BLOCK_SENDOUT					(EV_TEACHER_START + 13)
#define EV_BLCOK_ARRIVED					(EV_TEACHER_START + 14)

#define EV_JOINGROUPCHAT					(EV_TEACHER_START + 15)
#define EV_LEAVEGROUPCHAT					(EV_TEACHER_START + 16)
#define EV_MEMBERNAMECHANGED				(EV_TEACHER_START + 17)
#define EV_MEMBERSTATECHANGED				(EV_TEACHER_START + 18)
#define EV_MEMBERCOMMANDCHANGED				(EV_TEACHER_START + 24)

#define EV_ONLYONE_FAILED					(EV_TEACHER_START + 19)

#define EV_APPLICATION_CREATED				(EV_TEACHER_START + 20)
#define EV_APPLICATION_EXITED				(EV_TEACHER_START + 21)

#define EV_WEBSITE_CREATED					(EV_TEACHER_START + 22)
#define EV_WEBSITE_EXITED					(EV_TEACHER_START + 23)

// Student Event
#define EV_STUDENT_START					0x80000000

#define EV_SUBMIT_REQUEST_RET				(EV_STUDENT_START + 1)
#define EV_SUBMIT_REQUEST_TIMEOUT			(EV_STUDENT_START + 2)
#define EV_SUBMIT_CANCEL_RET				(EV_STUDENT_START + 3)
#define EV_SUBMIT_CANCEL_TIMEOUT			(EV_STUDENT_START + 4)

#define EV_UPDATE_THUMBNAIL					(EV_STUDENT_START + 5)

#define EV_CHANNEL_ARRIVE					(EV_STUDENT_START + 6)
#define EV_CHANNEL_LEAVE					(EV_STUDENT_START + 7)
#define EV_CHANNEL_TIMEOUT					(EV_STUDENT_START + 8)
#define EV_CHANNEL_FORCE					(EV_STUDENT_START + 9)
#define EV_CHANNEL_RELOGIN					(EV_STUDENT_START + 10)
#define EV_CHANNEL_LOCKCHANGED				(EV_STUDENT_START + 11)
#define EV_CHANNEL_REJECT					(EV_STUDENT_START + 12)

#define EV_NAME_CHANGED_BY_TEACHER			(EV_STUDENT_START + 13)
#define EV_NAME_REQUEST_RET					(EV_STUDENT_START + 14)

#define EV_TEACHER_EXIT						(EV_STUDENT_START + 15)

#define EV_COMMAND_ARRIVED					(EV_STUDENT_START + 16)

#define EV_FILECOLLECT_BEGIN				(EV_STUDENT_START + 17)
#define EV_FILECOLLECT_END					(EV_STUDENT_START + 18)
#define EV_FILECOLLECT_TRANSMIT				(EV_STUDENT_START + 19)

#define EV_CONFCALL_ADDMEMBER				(EV_STUDENT_START + 20)
#define EV_CONFCALL_DELMEMBER				(EV_STUDENT_START + 21)
#define EV_CONFCALL_STATECHANGED			(EV_STUDENT_START + 22)
#define EV_CONFCALL_NAMECHANGED				(EV_STUDENT_START + 23)
#define EV_CONFCALL_RESPOND					(EV_STUDENT_START + 24)

#define EV_ASKGROUPID_RET					(EV_STUDENT_START + 25)
#define EV_CHATCOMMAND_ARRIVED				(EV_STUDENT_START + 26)

#define EV_POLICY_CHANGE					(EV_STUDENT_START + 27)

#define EV_UPDATE_APPLIST					(EV_STUDENT_START + 28)
#define EV_UPDATE_WEBLIST					(EV_STUDENT_START + 29)

#define EV_PROXIMITY_INVITE					(EV_STUDENT_START + 30)

// QUIZ Event
#define EV_QUIZ_START						0x07000000

#define EV_QUIZ_COMMAND_SUCCESS					(EV_QUIZ_START + 1)
#define EV_QUIZ_COMMAND_FAILED					(EV_QUIZ_START + 2)
#define EV_QUIZ_COMMAND_ARRIVED					(EV_QUIZ_START + 3)
#define EV_QUIZ_BLOCK_SENDOUT					(EV_QUIZ_START + 4)
#define EV_QUIZ_BLOCK_ARRIVED					(EV_QUIZ_START + 5)
#define EV_QUIZFILE_PROGRESS					(EV_QUIZ_START + 6)
#define EV_QUIZFILE_SUCCESS						(EV_QUIZ_START + 7)
#define EV_QUIZFILE_FAILED						(EV_QUIZ_START + 8)
#define EV_QUIZ_CONNECT_SUCCESS					(EV_QUIZ_START + 9)
#define EV_QUIZ_CONNECT_FAILED					(EV_QUIZ_START + 10)
#define EV_QUIZ_NETWORK_ERROR					(EV_QUIZ_START + 11)
#define EV_QUIZ_PING							(EV_QUIZ_START + 12)
#define EV_QUIZ_PING_RET						(EV_QUIZ_START + 13)


/////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////

typedef struct tagEVENT_HEADER {
	DWORD dwEvent;
	DWORD dwLength;
}EVENT_HEADER, *PEVENT_HEADER;

// File submit
typedef struct tagEVENT_SUBMIT_REQUEST {
	GUID guidRequest;
	DWORD dwStudentIp;
	LONGLONG llSize;
	DWORD dwCount;
	TCHAR szStudentName[32];
	TCHAR szFileNames[MAX_PATH];
} EVENT_SUBMIT_REQUEST, *PEVENT_SUBMIT_REQUEST;

typedef struct tagEVENT_SUBMIT_CANCEL {
	GUID guidRequest;
	DWORD dwStudentIp;
} EVENT_SUBMIT_CANCEL, *PEVENT_SUBMIT_CANCEL;

typedef struct tagEVENT_SUBMIT_REQUEST_RET {
	BOOL bEnable;
	BOOL bQuotaPass;
	BOOL bAccept;
	LONGLONG llQuotaSize;
	DWORD dwQuotaCount;
}EVENT_SUBMIT_REQUEST_RET, *PEVENT_SUBMIT_REQUEST_RET;

typedef struct tagEVENT_SUBMIT_CANCEL_RET {
	BOOL bAccept;
}EVENT_SUBMIT_CANCEL_RET, *PEVENT_SUBMIT_CANCEL_RET;

typedef struct tagEVENT_SUBMIT_COMPLETE {
	DWORD dwStudentIp;
	int nCompletedFileCount;
	TCHAR szStudentName[32];
}EVENT_SUBMIT_COMPLETE, *PEVENT_SUBMIT_COMPLETE;

typedef struct tagEVENT_THUMBNAIL_UPDATE {
	int nWidth;
	int nHeight;
}EVENT_THUMBNAIL_UPDATE, *PEVENT_THUMBNAIL_UPDATE;

typedef struct tagEVENT_THUMBNAIL_ARRIVED {
	DWORD dwMemberId;
	DWORD cbJPGSize;
	BYTE  abJPGBuffer[1];
}EVENT_THUMBNAIL_ARRIVED, *PEVENT_THUMBNAIL_ARRIVED;

typedef struct tagEVENT_APPLYCHANNEL_SUCCESS {
	DWORD nChannelId;
}EVENT_APPLYCHANNEL_SUCCESS, *PEVENT_APPLYCHANNEL_SUCCESS;

typedef struct tagEVENT_CANCEL_CONNECT
{
	DWORD dwClientIp;
	BYTE abMac[6];
}EVENT_CANCEL_CONNECT, *PEVENT_CANCEL_CONNECT;

typedef struct tagEVENT_TEACHER_CHANNEL
{
	DWORD nChannelId;
	DWORD dwRejectCode;
	DWORD dwIpAddress;
	TCHAR szName[32];
}EVENT_TEACHER_CHANNEL, *PEVENT_TEACHER_CHANNEL;

typedef struct tagEVENT_NAME_CHANGED_BY_TEACHER
{
	TCHAR szNewName[32];
}EVENT_NAME_CHANGED_BY_TEACHER, *PEVENT_NAME_CHANGED_BY_TEACHER;

typedef struct tagEVENT_NAME_CHANGED_BY_STUDENT
{
	BYTE  abMacAddress[6];
	TCHAR szNewName[32];
}EVENT_NAME_CHANGED_BY_STUDENT, *PEVENT_NAME_CHANGED_BY_STUDENT;

typedef struct tagEVENT_NAME_REQUEST_RET
{
	BOOL bAccepted;
	TCHAR szResetName[32];
}EVENT_NAME_REQUEST_RET, *PEVENT_NAME_REQUEST_RET;

typedef struct tagEVENT_TEACHER_EXIT
{
	DWORD dwTeacherIp;
}EVENT_TEACHER_EXIT, *PEVENT_TEACHER_EXIT;

typedef struct tagEVENT_COMMAND_ARRIVED {
	DWORD cbCmdSize;
	BYTE  abCmdBuffer[1];
}EVENT_COMMAND_ARRIVED, *PEVENT_COMMAND_ARRIVED;

// Quiz
typedef struct tagEVENT_QUIZ_COMMAND_SUCCESS {
	DWORD dwIpAddress;
}EVENT_QUIZ_COMMAND_SUCCESS, *PEVENT_QUIZ_COMMAND_SUCCESS;

typedef struct tagEVENT_QUIZ_COMMAND_FAILED {
	DWORD dwIpAddress;
}EVENT_QUIZ_COMMAND_FAILED, *PEVENT_QUIZ_COMMAND_FAILED;

typedef struct tagEVENT_QUIZ_COMMAND_ARRIVED {
	DWORD dwIpAddress;
	BYTE abMac[6];
	DWORD cbCmdSize;
	BYTE  abCmdBuffer[1];
}EVENT_QUIZ_COMMAND_ARRIVED, *PEVENT_QUIZ_COMMAND_ARRIVED;

typedef struct tagEVENT_QUIZ_BLOCK_SENDOUT
{
	DWORD dwReceiverIp;
	DWORD dwBlockType;
}EVENT_QUIZ_BLOCK_SENDOUT, *PEVENT_QUIZ_BLOCK_SENDOUT;

typedef struct tagEVENT_QUIZ_BLOCK_ARRIVED
{
	DWORD dwSenderIp;
	DWORD dwBlockType;
	DWORD dwBlockSize;
	BYTE* pBlockBuffer;
}EVENT_QUIZ_BLOCK_ARRIVED, *PEVENT_QUIZ_BLOCK_ARRIVED;

typedef struct tagEVENT_QUIZ_PING {
	DWORD dwIpAddress;
	BYTE abMac[6];
	DWORD cbSize;
	BYTE  abBuffer[1];
}EVENT_QUIZ_PING, *PEVENT_QUIZ_PING;

typedef struct tagEVENT_QUIZ_PING_RET {
	DWORD cbSize;
	BYTE  abBuffer[1];
}EVENT_QUIZ_PING_RET, *PEVENT_QUIZ_PING_RET;

typedef struct tagEVENT_QUIZFILE_PROGRESS {
	DWORD dwIpAddress;
	BYTE abMac[6];
	DWORD dwFileSize;
	DWORD dwReceivedSize;
}EVENT_QUIZFILE_PROGRESS, *PEVENT_QUIZFILE_PROGRESS;

typedef struct tagEVENT_FILECOLLECT_STATE_CHANGED {
	PMEMBERINFO pMemberInfo;
	DWORD		dwState;
	DWORD		dwCount;
	LONGLONG	llTotalSize;
	DWORD		dwErrorCode;
}EVENT_FILECOLLECT_STATE_CHANGED, *PEVENT_FILECOLLECT_STATE_CHANGED;

typedef struct tagEVENT_TRANSMIT {
	DWORD dwEvent;
	DWORD dwRequest;
	DWORD dwErrorCode;
}EVENT_TRANSMIT, *PEVENT_TRANSMIT;

typedef struct tagEVENT_FILECOLLECT_CLIENTERROR
{
	PMEMBERINFO pMemberInfo;
	DWORD dwErrorCode;
	DWORD cbSize;
	BYTE  abParams[1];
}EVENT_FILECOLLECT_CLIENTERROR, *PEVENT_FILECOLLECT_CLIENTERROR;

typedef struct tagEVENT_CONFCALL_ADDMEMBER
{
	BOOL bTeacher;
	DWORD dwIpAddress;
	DWORD dwState;
	TCHAR szName[32];
}EVENT_CONFCALL_ADDMEMBER, *PEVENT_CONFCALL_ADDMEMBER;

typedef struct tagEVENT_CONFCALL_DELMEMBER
{
	DWORD dwIpAddress;
}EVENT_CONFCALL_DELMEMBER, *PEVENT_CONFCALL_DELMEMBER;

typedef struct tagEVENT_CONFCALL_STATECHANGED
{
	DWORD dwIpAddress;
	DWORD dwNewState;
	DWORD dwCallingIp;
	DWORD dwTalkingIp;
}EVENT_CONFCALL_STATECHANGED, *PEVENT_CONFCALL_STATECHANGED;

typedef struct tagEVENT_CONFCALL_NAMECHANGED
{
	DWORD dwIpAddress;
	TCHAR szNewName[32];
}EVENT_CONFCALL_NAMECHANGED, *PEVENT_CONFCALL_NAMECHANGED;

typedef struct tagEVENT_CONFCALL_RESPOND
{
	DWORD dwIpAddress;
	BOOL bAccept;
}EVENT_CONFCALL_RESPOND, *PEVENT_CONFCALL_RESPOND;

typedef struct tagEVENT_CHATCOMMAND_ARRIVED {
	DWORD cbCmdSize;
	BYTE  abCmdBuffer[1];
}EVENT_CHATCOMMAND_ARRIVED, *PEVENT_CHATCOMMAND_ARRIVED;

typedef struct tagEVENT_BLOCK_SENDOUT
{
	DWORD dwReceiverIp;
	DWORD dwBlockType;
}EVENT_BLOCK_SENDOUT, *PEVENT_BLOCK_SENDOUT;

typedef struct tagEVENT_BLOCK_ARRIVED
{
	DWORD dwSenderIp;
	DWORD dwBlockType;
	DWORD dwBlockSize;
	BYTE* pBlockBuffer;
}EVENT_BLOCK_ARRIVED, *PEVENT_BLOCK_ARRIVED;

typedef struct tagEVENT_POLICY_CHANGE
{
	DWORD dwPolicyMask;
	DWORD dwAppPolicy;
	DWORD dwWebPolicy;
	DWORD dwUsbPolicy;
	DWORD dwPrintPolicy;
}EVENT_POLICY_CHANGE, *PEVENT_POLICY_CHANGE;

typedef struct tagEVENT_PROC_CREATED
{
	DWORD dwStudentIp;
	DWORD dwProcessId;
	DWORD cbInfoSize;
	BYTE* pbInfo;
}EVENT_PROC_CREATED, *PEVENT_PROC_CREATED;

typedef struct tagEVENT_PROC_EXITED
{
	DWORD dwStudentIp;
	DWORD dwCount;
	DWORD pdwProcIdList[1];
}EVENT_PROC_EXITED, *PEVENT_PROC_EXITED;

typedef struct tagEVENT_WEB_CREATED
{
	DWORD dwStudentIp;
	DWORD dwWebId;
	DWORD cbInfoSize;
	BYTE* pbInfo;
}EVENT_WEB_CREATED, *PEVENT_WEB_CREATED;

typedef struct tagEVENT_WEB_EXITED
{
	DWORD dwStudentIp;
	DWORD dwCount;
	DWORD pdwWebIdList[1];
}EVENT_WEB_EXITED, *PEVENT_WEB_EXITED;

typedef struct tagEVENT_PROXIMITY_INVITE
{
	DWORD dwInviterIp;
	DWORD dwGroupLeaderIp;
	DWORD dwGroupId;
}EVENT_PROXIMITY_INVITE, *PEVENT_PROXIMITY_INVITE;

#pragma pack(pop)

#endif //__EVENT_H__